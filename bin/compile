#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
# debug
# set -x
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
# fetch HEROKU env var
BUILDPACK_DIR=$(cd "$(dirname "${0:-}")"; cd ..; pwd)

export_env_dir() {
  env_dir=$1
  acceptlist_regex=${2:-''}
  denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      if [ "$e" = "SECRETBUDDY_ENV" ]; then
        secretbuddy_env=$(cat $env_dir/$e)
      fi    
      echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}


export_env_dir $ENV_DIR
# SECRETBUDDY_ENV here is obfuscated (******) because we are using WriteOnlyConfigVar
SECRETBUDDY="$SECRETBUDDY_ENV"
if [ -z "$SECRETBUDDY" ]; then
  echo "No secrets found"
  exit 0
fi

BUILDPACK=$BUILDPACK_DIR/secret-buddy-buildpack

echo "-----> Listing all the files in the buildpack dir:"
ls -la $BUILDPACK_DIR
echo "-----> Listing the buildpack info:"
ls -all $BUILDPACK

mkdir -p "$BUILD_DIR/.profile.d"

cp $BUILDPACK_DIR/profile/secret-buddy.sh $BUILD_DIR/.profile.d/secret-buddy.sh

cp $BUILDPACK $BUILD_DIR/.profile.d/secret-buddy-buildpack 

echo "-----> Listing all the files in the BUILD_DIR"
ls -la $BUILD_DIR

echo "-----> Listing all the files in the profile.d"
ls -la $BUILD_DIR/.profile.d

echo "-----> Exporting all the secrets from secretbuddy_env"
echo $secretbuddy_env | jq -r '.current | to_entries[] | "export \(.key)=\(.value)"' > $BUILDPACK_DIR/export

echo "-----> Listing the export file info:"
ls -all $BUILDPACK_DIR/export

# ONLY FOR LOCAL DEBUGGING
#echo "-----> Listing the export file"
#cat $BUILDPACK_DIR/export
